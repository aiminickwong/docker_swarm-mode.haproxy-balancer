[supervisord]
nodaemon = true
pidfile = /var/run/supervisord.pid
logfile = /var/log/supervisord.log
logfile_maxbytes = 10MB
logfile_backups = 10
# loglevel = info
loglevel = debug

[program:haproxy]
# Graceful restart haproxy
# /usr/sbin/haproxy -f /etc/haproxy/haproxy.cfg -p /run/haproxy.pid -sf OLD_PID
# https://www.haproxy.com/blog/truly-seamless-reloads-with-haproxy-no-more-hacks/

# -sf <pid>* : send the "finish" signal (SIGUSR1) to older processes after boot
#     completion to ask them to finish what they are doing and to leave. <pid>
#     is a list of pids to signal (one per argument). The list ends on any
#     option starting with a "-". It is not a problem if the list of pids is
#     empty, so that it can be built on the fly based on the result of a command
#     like "pidof" or "pgrep".

# /usr/sbin/haproxy -f /etc/haproxy/haproxy.cfg -p /run/haproxy.pid -sf $(pidof 'haproxy' | sort | uniq | sed -r 's/[ ]/, /g')
command = /usr/sbin/haproxy-systemd-wrapper -f /etc/haproxy/haproxy.cfg -p /run/haproxy.pid
stdout_logfile = /var/log/supervisor.%(program_name)s.log
stderr_logfile = /var/log/supervisor.%(program_name)s.log
process_name = haproxy
autostart = true
autorestart = true
priority = 5

[program:haproxy-balancer]
command = /usr/bin/python3 /etc/haproxy/haproxy-balancer/haproxy-balancer.py -w
stdout_logfile = /var/log/supervisor.%(program_name)s.log
stderr_logfile = /var/log/supervisor.%(program_name)s.log
process_name = haproxy-balancer
autostart = true
autorestart = false
priority=10

[program:rsyslog]
command=/usr/sbin/rsyslogd -n
stdout_logfile = /var/log/supervisor.%(program_name)s.log
stderr_logfile = /var/log/supervisor.%(program_name)s.log
process_name = rsyslog
autostart = true
autorestart = false
priority=15

[eventlistener:haproxy_exit]
command = /usr/bin/python2 /etc/supervisord/supervisord.listener.py '/var/run/supervisord.pid' 'haproxy' '/run/haproxy.pid' 30
process_name = haproxy_exit
events = PROCESS_STATE
autostart = true
autorestart = true
priority = 20

[eventlistener:haproxy-balancer_exit]
command = /usr/bin/python2 /etc/supervisord/supervisord.listener.py '/var/run/supervisord.pid' 'haproxy-balancer' '/run/haproxy-balancer.pid' 30
process_name = haproxy-balancer_exit
events = PROCESS_STATE
autostart = true
autorestart = true
priority = 25

[eventlistener:rsyslog_exit]
command = /usr/bin/python2 /etc/supervisord/supervisord.listener.py '/var/run/supervisord.pid' 'rsyslog' '/run/syslogd.pid' 30
process_name = haproxy-balancer_exit
events = PROCESS_STATE
autostart = true
autorestart = true
priority = 30
